server:
  port: 8080

spring:
  application:
    name: banking-service
  profiles: dev
  datasource:
    username: postgres
    url: jdbc:postgresql://localhost:5432/banking?useSSL=false
    driverClassName: org.postgresql.Driver
    password: admin
    hikari:
      connectionTimeout: '5000'
      maximumPoolSize: '5'
  sql:
    init:
      mode: always
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL81Dialect
    show-sql: 'true'
    hibernate:
      ddl-auto: update
      format_sql: true
  mvc:
    throw-exception-if-no-handler-found: 'true'
  http:
    encoding:
      force: 'true'
  resources:
    add-mappings: 'false'
  kafka:
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    bootstrap-servers: localhost:29092
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

keycloak:
  auth-server-url: http://localhost:8081
  credentials:
    secret: J2CORr0VDTgXtFStLd3LVhKhiSd4lDvR
  realm: banking-service
  bearer-only: 'true'
  use-resource-role-mappings: 'true'
  ssl-required: none
  resource: banking-service-client

management:
  port: 8082
  security:
    enabled: false
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: [ "health", "prometheus", "metrics" ]
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true

